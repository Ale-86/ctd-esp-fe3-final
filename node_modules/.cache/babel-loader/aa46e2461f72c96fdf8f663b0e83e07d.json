{"ast":null,"code":"var _jsxFileName = \"/home/alejandra/Escritorio/mariaAlejandraWilliams/fe3-final/src/Components/utils/global.context.jsx\";\nimport { createContext, useMemo, useState, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  theme: \"light\",\n  favoritos: {}\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState);\n\nconst getFavsFromLocalStorage = () => {\n  const favs = localStorage.getItem('favoritesDentists');\n\n  if (favs) {\n    return JSON.parse(favs);\n  }\n\n  return {};\n};\n\nconst saveFavsToLocalStorage = favoritos => {\n  localStorage.setItem('favoritesDentists', JSON.stringify(favoritos));\n};\n\nconst addFav = (name, username, id) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {},\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"names":["createContext","useMemo","useState","useReducer","initialState","theme","favoritos","ContextGlobal","getFavsFromLocalStorage","favs","localStorage","getItem","JSON","parse","saveFavsToLocalStorage","setItem","stringify","addFav","name","username","id","children"],"sources":["/home/alejandra/Escritorio/mariaAlejandraWilliams/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext, useMemo, useState, useReducer } from \"react\";\n\nexport const initialState = { theme: \"light\", favoritos: {} }\n\nexport const ContextGlobal = createContext(initialState);\n\nconst getFavsFromLocalStorage = () => {\n  const favs = localStorage.getItem('favoritesDentists');\n  if (favs) {\n    return JSON.parse(favs)\n  }\n\n  return {}\n}\n\nconst saveFavsToLocalStorage = (favoritos) => {\n  localStorage.setItem('favoritesDentists', JSON.stringify(favoritos))\n}\n\nconst addFav = (name, username, id) => {\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\n\n  return (\n    <ContextGlobal.Provider value={{}}>\n      {children}\n    </ContextGlobal.Provider>\n  );\n};\n"],"mappings":";AAAA,SAASA,aAAT,EAAwBC,OAAxB,EAAiCC,QAAjC,EAA2CC,UAA3C,QAA6D,OAA7D;;AAEA,OAAO,MAAMC,YAAY,GAAG;EAAEC,KAAK,EAAE,OAAT;EAAkBC,SAAS,EAAE;AAA7B,CAArB;AAEP,OAAO,MAAMC,aAAa,gBAAGP,aAAa,CAACI,YAAD,CAAnC;;AAEP,MAAMI,uBAAuB,GAAG,MAAM;EACpC,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAAb;;EACA,IAAIF,IAAJ,EAAU;IACR,OAAOG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;EACD;;EAED,OAAO,EAAP;AACD,CAPD;;AASA,MAAMK,sBAAsB,GAAIR,SAAD,IAAe;EAC5CI,YAAY,CAACK,OAAb,CAAqB,mBAArB,EAA0CH,IAAI,CAACI,SAAL,CAAeV,SAAf,CAA1C;AACD,CAFD;;AAIA,MAAMW,MAAM,GAAG,CAACC,IAAD,EAAOC,QAAP,EAAiBC,EAAjB,KAAwB;EACrC;EAEA,oBACE,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE,EAA/B;IAAA,UACGC;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CARD"},"metadata":{},"sourceType":"module"}